apiVersion: apps/v1
kind: Deployment
metadata:
  name: scheduler-{{ include "bunkerweb.fullname" . }}
  namespace: {{ include "bunkerweb.namespace" . }}
  labels:
    {{- include "bunkerweb.labels" . | nindent 4 }}
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      {{- include "bunkerweb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bunkerweb.labels" . | nindent 8 }}
        {{- with .Values.scheduler.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        bunkerweb.io/component: "scheduler"
    spec:
      serviceAccountName: {{ include "bunkerweb.fullname" . }}
      containers:
        - name: bunkerweb-scheduler
          image: {{ .Values.scheduler.repository }}:{{ .Values.scheduler.tag }}
          imagePullPolicy: {{ .Values.scheduler.pullPolicy }}
          {{- with .Values.scheduler.resources }}
          resources:
            {{- toYaml . | nindent 12}}
          {{- end }}
          {{- with .Values.scheduler.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12}}
          {{- end }}
          {{- with .Values.scheduler.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12}}
          {{- end }}
          env:
            # Mandatory for k8s integration
            - name: KUBERNETES_MODE
              value: "yes"
            - name: DATABASE_URI
              {{- if not (empty .Values.settings.existingSecret) }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.settings.existingSecret }}
                  key: database-uri
              {{- else }}
              value: "{{ include "bunkerweb.databaseUri" . }}"
              {{- end }}
            - name: SERVER_NAME
              value: ""
            - name: MULTISITE
              value: "yes"
            - name: DNS_RESOLVERS
              value: "{{ .Values.settings.misc.dnsResolvers }}"
            - name: API_WHITELIST_IP
              value: "{{ .Values.settings.misc.apiWhitelistIp }}"
            {{- $hasBunkerWebInstance := false }}
            {{- if kindIs "slice" .Values.scheduler.extraEnvs }}
              {{- range .Values.scheduler.extraEnvs }}
                {{- if eq .name "BUNKERWEB_INSTANCES" }}
                  {{- $hasBunkerWebInstance = true }}
                {{- end }}
              {{- end }}
            {{- end }}
            {{- if or (not .Values.scheduler.extraEnvs) (not $hasBunkerWebInstance) }}
            - name: BUNKERWEB_INSTANCES
              value: ""
            {{- end }}
            {{- if .Values.settings.ui.wizard }}
            - name: UI_HOST
              value: "{{ include "bunkerweb.uiHost" . }}"
            {{- end }}
            {{- if .Values.scheduler.usePrometheusExporter }}
            - name: USE_PROMETHEUS_EXPORTER
              value: "yes"
            - name: USE_MONITORING
              value: "yes"
            {{- end }}
            {{- if .Values.scheduler.proLicenseKey }}
            - name: PRO_LICENSE_KEY
              value: {{ .Values.scheduler.proLicenseKey | quote }}
            {{- end }}
            {{- include "bunkerweb.redisEnv" . | nindent 12 }}
            {{- if .Values.scheduler.extraEnvs }}
              {{- toYaml .Values.scheduler.extraEnvs | nindent 12 }}
            {{- end }}
    {{- if .Values.scheduler.nodeSelector }}
      {{- with .Values.scheduler.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- else if .Values.nodeSelector }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or (.Values.scheduler.tolerations) (.Values.tolerations) }}
      tolerations:
      {{- if .Values.scheduler.tolerations }}
        {{- toYaml .Values.scheduler.tolerations | nindent 6 }}
      {{- else }}
        {{- toYaml .Values.tolerations | nindent 6 }}
      {{- end }}
    {{- end }}
    {{- if or (.Values.scheduler.imagePullSecrets) (.Values.imagePullSecrets) }}
      imagePullSecrets:
      {{- if .Values.scheduler.imagePullSecrets }}
        {{- toYaml .Values.scheduler.imagePullSecrets | nindent 6 }}
      {{- else }}
        {{- toYaml .Values.imagePullSecrets | nindent 6 }}
      {{- end }}
    {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}