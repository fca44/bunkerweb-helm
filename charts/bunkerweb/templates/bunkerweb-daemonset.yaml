{{- if eq (.Values.bunkerweb.kind | default "DaemonSet") "DaemonSet" }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "bunkerweb.fullname" . }}
  namespace: {{ include "bunkerweb.namespace" . }}
  labels:
    {{- include "bunkerweb.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "bunkerweb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        # mandatory annotation
        {{- if .Values.bunkerweb.enableInstance | default true }}
        bunkerweb.io/INSTANCE: "yes"
        {{- end }}
      {{- with .Values.bunkerweb.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bunkerweb.labels" . | nindent 8 }}
        {{- with .Values.bunkerweb.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        bunkerweb.io/component: "bunkerweb"
    spec:
    {{- with .Values.bunkerweb.affinity }}
      affinity:
      {{- toYaml . | nindent 8}}
    {{- end }}
      containers:
        # using bunkerweb as name is mandatory
        - name: bunkerweb
          image: {{ .Values.bunkerweb.repository }}:{{ .Values.bunkerweb.tag }}
          imagePullPolicy: {{ .Values.bunkerweb.pullPolicy }}
          {{- with .Values.bunkerweb.resources }}
          resources:
            {{- toYaml . | nindent 12}}
          {{- end }}
          {{- with .Values.bunkerweb.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12}}
          {{- end }}
          ports:
            - containerPort: 8080
              {{- if .Values.bunkerweb.hostPorts }}
              hostPort: 80
              {{- end }}
            - containerPort: 8443
              {{- if .Values.bunkerweb.hostPorts }}
              hostPort: 443
              {{- end }}
            - containerPort: 9113
              name: metrics
          env:
            # Mandatory for k8s integration
            - name: KUBERNETES_MODE
              value: "yes"
            # DNS resolver
            - name: DNS_RESOLVERS
              value: "{{ .Values.settings.misc.dnsResolvers }}"
            # Internal subnet(s) + localhost
            - name: API_WHITELIST_IP
              value: "{{ .Values.settings.misc.apiWhitelistIp }}"
          {{- if .Values.bunkerweb.extraEnvs }}
            {{- toYaml .Values.bunkerweb.extraEnvs | nindent 12 }}
          {{- end }}
          {{- with .Values.bunkerweb.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12}}
          {{- end }}
          {{- with .Values.bunkerweb.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12}}
          {{- end }}
    {{- if .Values.bunkerweb.nodeSelector }}
      {{- with .Values.bunkerweb.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- else if .Values.nodeSelector }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or (.Values.bunkerweb.tolerations) (.Values.tolerations) }}
      tolerations:
      {{- if .Values.bunkerweb.tolerations }}
        {{- toYaml .Values.bunkerweb.tolerations | nindent 6 }}
      {{- else }}
        {{- toYaml .Values.tolerations | nindent 6 }}
      {{- end }}
    {{- end }}
    {{- if or (.Values.bunkerweb.imagePullSecrets) (.Values.imagePullSecrets) }}
      imagePullSecrets:
      {{- if .Values.bunkerweb.imagePullSecrets }}
        {{- toYaml .Values.bunkerweb.imagePullSecrets | nindent 6 }}
      {{- else }}
        {{- toYaml .Values.imagePullSecrets | nindent 6 }}
      {{- end }}
    {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}