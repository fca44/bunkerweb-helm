name: Validate Helm Chart

on:
  push:
    branches: [ dev ]
    paths: 
      - 'charts/**'
      - 'scripts/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ dev ]
    paths:
      - 'charts/**'
      - 'scripts/**'
      - '.github/workflows/**'

jobs:
  validate:
    runs-on: ubuntu-latest
    name: Validate BunkerWeb Helm Chart
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Helm
      uses: azure/setup-helm@v4.2.0
      with:
        version: 'latest'
        
    - name: Install yq
      run: |
        sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        sudo chmod +x /usr/local/bin/yq
      
    - name: Cache Helm dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/helm
        key: ${{ runner.os }}-helm-${{ hashFiles('charts/bunkerweb/Chart.yaml') }}
        restore-keys: |
          ${{ runner.os }}-helm-
          
    - name: Run Chart Validation
      run: ./scripts/validate-chart.sh --generate-report
      env:
        GENERATE_REPORT: true
        
    - name: Upload validation report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: validation-report
        path: validation-report.txt
        retention-days: 30
        
    - name: Comment validation results on PR
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          // Read validation report if it exists
          let report = '';
          try {
            report = fs.readFileSync('validation-report.txt', 'utf8');
          } catch (error) {
            report = 'Validation report not found. Check the job logs for details.';
          }
          
          // Format comment
          const comment = `## üîç Helm Chart Validation Results
          
          <details>
          <summary>üìã Full Validation Report</summary>
          
          \`\`\`
          ${report}
          \`\`\`
          
          </details>
          
          > This comment is automatically generated by the chart validation workflow.`;
          
          // Post comment
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan
    needs: validate
    if: success()
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Helm
      uses: azure/setup-helm@v4.2.0
      
    - name: Install Helm security plugins
      run: |
        helm plugin install https://github.com/stackrox/kube-linter || true
        
    - name: Run security scan with kube-linter
      continue-on-error: true
      run: |
        # Generate templates for security scanning
        helm template test-security charts/bunkerweb > security-scan-templates.yaml
        
        # Run kube-linter if available
        if command -v kube-linter &> /dev/null; then
          kube-linter lint security-scan-templates.yaml --format json > security-report.json || true
        else
          echo "kube-linter not available, skipping security scan"
        fi
        
    - name: Upload security report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: |
          security-report.json
          security-scan-templates.yaml
        retention-days: 30

  compatibility-test:
    runs-on: ubuntu-latest
    name: Kubernetes Compatibility Test
    needs: validate
    if: success()
    
    strategy:
      matrix:
        # Using Kind node images that are available
        # See: https://github.com/kubernetes-sigs/kind/releases
        k8s-version: ['1.28.13', '1.29.8', '1.30.4', '1.31.0']
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Helm
      uses: azure/setup-helm@v4.2.0
      
    - name: Create Kind cluster
      uses: helm/kind-action@v1.10.0
      with:
        version: v0.20.0
        node_image: kindest/node:v${{ matrix.k8s-version }}
        cluster_name: k8s-${{ matrix.k8s-version }}
        
    - name: Test chart installation (dry-run)
      run: |
        # Test installation with dry-run
        helm install bunkerweb-test charts/bunkerweb \
          --dry-run \
          --debug \
          --namespace bunkerweb-system \
          --create-namespace
          
    - name: Test chart template generation
      run: |
        # Test various configurations
        ./scripts/validate-chart.sh
        
    - name: Cleanup
      if: always()
      run: |
        kind delete cluster --name k8s-${{ matrix.k8s-version }} || true

  chart-testing:
    runs-on: ubuntu-latest
    name: Chart Testing with ct
    needs: validate
    if: success()
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Helm
      uses: azure/setup-helm@v4.2.0
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install chart-testing
      uses: helm/chart-testing-action@v2.6.1
      
    - name: Run chart-testing (list-changed)
      id: list-changed
      run: |
        changed=$(ct list-changed --chart-dirs charts --target-branch ${{ github.event.repository.default_branch }})
        if [[ -n "$changed" ]]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Run chart-testing (lint)
      if: steps.list-changed.outputs.changed == 'true'
      run: ct lint --chart-dirs charts --target-branch ${{ github.event.repository.default_branch }}
      
    - name: Create Kind cluster
      if: steps.list-changed.outputs.changed == 'true'
      uses: helm/kind-action@v1.10.0
      with:
        version: v0.20.0
        
    - name: Run chart-testing (install)
      if: steps.list-changed.outputs.changed == 'true'
      run: |
        # Create test values that work in CI environment
        cat > ci-values.yaml << EOF
        service:
          type: ClusterIP
        
        bunkerweb:
          hostPorts: false
          
        mariadb:
          persistence:
            size: 1Gi
            
        redis:
          persistence:
            size: 500Mi
            
        ui:
          logs:
            persistence:
              size: 500Mi
        EOF
        
        ct install \
          --chart-dirs charts \
          --target-branch ${{ github.event.repository.default_branch }} \
          --helm-extra-args "--values ci-values.yaml"
